---
name: Build and Deploy Docker Image
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      version:
        description: ComfyUI Version
        required: false
        default: v0.3.27

jobs:
  build-and-test:
    strategy:
      matrix:
        cuda:
          - base_image: nvidia/cuda:12.6.3-cudnn-devel-ubuntu24.04
            torch_cuda: cu126
            tag_suffix: cuda12.6
          - base_image: nvidia/cuda:12.1.1-cudnn8-devel-ubuntu22.04
            torch_cuda: cu121
            tag_suffix: cuda12.1
    runs-on: self-hosted
    timeout-minutes: 120
    env:
      VERSION: ${{ inputs.version || 'v0.3.27' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Build Docker image
        run: |
          docker build \
            --build-arg VERSION=${{ env.VERSION }} \
            --build-arg BASE_IMAGE=${{ matrix.cuda.base_image }} \
            --build-arg TORCH_CUDA=${{ matrix.cuda.torch_cuda }} \
            -t michaelgold/comfy3d:${{ env.VERSION }}-${{ matrix.cuda.tag_suffix }} \
            -f Docker/Dockerfile .
      - name: Test container
        run: |
          # Remove existing container if it exists
          docker rm -f comfy-test || true
          docker run -d -p 8188:8188 --name comfy-test --gpus all michaelgold/comfy3d:${{ env.VERSION }}-${{ matrix.cuda.tag_suffix }}
          sleep 300
          docker logs comfy-test > logs.txt
          cat logs.txt
          if grep -q "0.0.0.0" logs.txt; then
            echo "✅ ComfyUI server started"
          else
            echo "❌ ComfyUI server did not start" && exit 1
          fi
          docker stop comfy-test
          docker rm comfy-test

  push:
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: self-hosted
    timeout-minutes: 60
    strategy:
      matrix:
        cuda:
          - tag_suffix: cuda12.6
            latest: true
          - tag_suffix: cuda12.1
            latest: false
    env:
      VERSION: ${{ inputs.version || 'v0.3.27' }}
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push to Docker Hub
        run: |
          docker push michaelgold/comfy3d:${{ env.VERSION }}-${{ matrix.cuda.tag_suffix }}
          if [ "${{ matrix.cuda.latest }}" = "true" ]; then
            docker tag michaelgold/comfy3d:${{ env.VERSION }}-${{ matrix.cuda.tag_suffix }} michaelgold/comfy3d:latest
            docker push michaelgold/comfy3d:latest
          fi
