---
name: Build and Deploy Docker Image
on:
  schedule:
    - cron: '0 21 * * *'  # Runs at 9:00 PM UTC every day
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      version:
        description: ComfyUI Version
        required: false
        default: v0.3.50

jobs:
  check-comfyui-version:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.check.outputs.new_tag }}
      new_commit: ${{ steps.check.outputs.new_commit }}
      latest_tag: ${{ steps.check.outputs.latest_tag }}
      base_version: ${{ steps.check.outputs.base_version }}
      update_version: ${{ steps.check.outputs.update_version }}
      version_to_use: ${{ steps.set_version.outputs.version_to_use }}
      final_update_version: ${{ steps.set_version.outputs.final_update_version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check latest ComfyUI tag and commit
        id: check
        run: python utils/check_comfyui_latest.py

      - name: Set version to use
        id: set_version
        run: |
          if [[ "${{ github.event.inputs.version }}" != '' ]]; then
            echo "version_to_use=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
            echo "Using manually specified version: ${{ github.event.inputs.version }}"
          elif [[ "${{ steps.check.outputs.base_version }}" != '' ]]; then
            echo "version_to_use=${{ steps.check.outputs.base_version }}" >> $GITHUB_OUTPUT
            echo "Using base version for build: ${{ steps.check.outputs.base_version }}"
          else
            echo "version_to_use=v0.3.50" >> $GITHUB_OUTPUT
            echo "Using fallback version: v0.3.50"
          fi
          
          # Ensure update_version is never empty
          UPDATE_VER="${{ github.event.inputs.version }}"
          if [[ -z "$UPDATE_VER" ]]; then
            UPDATE_VER="${{ steps.check.outputs.latest_tag }}"
          fi
          if [[ -z "$UPDATE_VER" ]]; then
            UPDATE_VER="${{ steps.check.outputs.base_version }}"
          fi
          if [[ -z "$UPDATE_VER" ]]; then
            UPDATE_VER="v0.3.50"
          fi
          echo "final_update_version=$UPDATE_VER" >> $GITHUB_OUTPUT
          echo "Final update version will be: $UPDATE_VER"

  build-and-test:
    needs: check-comfyui-version
    if: ${{ github.event_name != 'schedule' || needs.check-comfyui-version.outputs.new_tag == 'true' || needs.check-comfyui-version.outputs.new_commit == 'true' }}
    strategy:
      matrix:
        cuda:
          - base_image: nvidia/cuda:12.8.1-cudnn-devel-ubuntu24.04
            torch_cuda: cu128
            tag_suffix: cuda12.8
    runs-on: self-hosted
    timeout-minutes: 300
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Build Docker image
        run: |
          docker build \
            --build-arg VERSION=${{ needs.check-comfyui-version.outputs.version_to_use }} \
            --build-arg UPDATE_VERSION=${{ needs.check-comfyui-version.outputs.final_update_version }} \
            --build-arg BASE_IMAGE=${{ matrix.cuda.base_image }} \
            --build-arg TORCH_CUDA=${{ matrix.cuda.torch_cuda }} \
            -t michaelgold/comfy3d:${{ needs.check-comfyui-version.outputs.final_update_version }}-${{ matrix.cuda.tag_suffix }} \
            -f Docker/Dockerfile .
      - name: Test container
        run: |
          # Remove existing container if it exists
          docker rm -f comfy-test || true
          docker run -d -p 8234:8188 --name comfy-test --gpus all michaelgold/comfy3d:${{ needs.check-comfyui-version.outputs.final_update_version }}-${{ matrix.cuda.tag_suffix }}
          sleep 150
          docker logs comfy-test > logs.txt
          cat logs.txt
          if grep -q "0.0.0.0" logs.txt; then
            echo "✅ ComfyUI server started"
          else
            echo "❌ ComfyUI server did not start" && exit 1
          fi
          docker stop comfy-test
          docker rm comfy-test

  push:
    needs: [check-comfyui-version, build-and-test]
    if: ${{ github.ref == 'refs/heads/main' && (github.event_name != 'schedule' || needs.check-comfyui-version.outputs.new_tag == 'true' || needs.check-comfyui-version.outputs.new_commit == 'true') }}
    runs-on: self-hosted
    timeout-minutes: 60
    strategy:
      matrix:
        cuda:
          - tag_suffix: cuda12.8
            latest: true
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push to Docker Hub
        run: |
          docker push michaelgold/comfy3d:${{ needs.check-comfyui-version.outputs.final_update_version }}-${{ matrix.cuda.tag_suffix }}
          if [ "${{ matrix.cuda.latest }}" = "true" ]; then
            docker tag michaelgold/comfy3d:${{ needs.check-comfyui-version.outputs.final_update_version }}-${{ matrix.cuda.tag_suffix }} michaelgold/comfy3d:latest
            docker push michaelgold/comfy3d:latest
          fi

  update-versions:
    runs-on: ubuntu-latest
    needs: [check-comfyui-version, push]
    if: ${{ needs.check-comfyui-version.outputs.new_tag == 'true' || needs.check-comfyui-version.outputs.new_commit == 'true' }}
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update ComfyUI versions
        run: python utils/check_comfyui_latest.py

      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: EndBug/add-and-commit@v7
        with:
          default_author: github_actions
          message: 'Update ComfyUI version info with latest tag and commit'
          add: 'utils/comfyui_version_info.json'
